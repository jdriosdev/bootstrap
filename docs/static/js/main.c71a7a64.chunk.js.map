{"version":3,"sources":["components/todoReducer.js","components/TodoAdd.js","hooks/useForm.js","components/TodoListItem.js","components/TodoList.js","components/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoAdd","handleAddTodo","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","useForm","description","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","desc","className","placeholder","autoComplete","onChange","TodoListItem","i","handleDelete","handleToggle","key","onClick","TodoList","todos","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c71a7a64.chunk.js","sourcesContent":["export const todoReducer = ( state = [], action ) => {\n  switch ( action.type ) {\n    case 'add':\n      return [...state, action.payload]\n    \n    case 'delete':\n      return state.filter( todo => todo.id !== action.payload)\n    \n    case 'toggle':\n      return state.map ( todo => \n        (todo.id === action.payload)\n          ? { ...todo, done: !todo.done }: todo\n      );\n  \n    default: \n      return state;\n  }\n}\n\n","import React from 'react'\nimport { useForm } from '../hooks/useForm';\n\nexport const TodoAdd = ({handleAddTodo}) => {\n\n  const [{description}, handleInputChange, reset] = useForm({\n    description: '',\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if( description.trim().length <= 1) {\n      return\n    }\n\n    const newTodo = {\n      id: new Date().getTime(),\n      desc: description,\n      done: false,\n    };\n\n    \n    handleAddTodo( newTodo )\n    reset()\n  }\n\n  return (\n    <>\n      <h4> Add TODO</h4>\n          <hr />\n\n          <form \n            onSubmit={handleSubmit}\n          >\n            <input\n              type='text'  \n              name='description'\n              className='form-control'\n              placeholder='Your task...'\n              autoComplete='off'\n              value={description}\n              onChange={handleInputChange}\n            />\n\n            <button \n              type='submit'\n              className='btn btn-outline-dark mt-1 btn-block'>\n              Add New\n            </button>\n            \n          </form>\n    </>\n  )\n}\n","import  { useState } from 'react'\n\nexport const useForm = (initialState={}) => {\n  \n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues( initialState)\n  }\n\n  const handleInputChange = ({target}) => {\n    setValues({\n      ...values,\n      [target.name]: target.value\n    });\n  } \n\n  return [values, handleInputChange, reset]\n\n}\n","import React from \"react\";\n\nexport const TodoListItem = ({ todo, i, handleDelete, handleToggle }) => {\n  return (\n    <li key={todo.id} className=\"list-group-item\">\n      <p\n        onClick={() => handleToggle(todo.id)}\n        className={`${todo.done && \"complete\"}`}\n      >\n        {i + 1}. {todo.desc}\n      </p>\n      <button className=\"btn btn-danger\" onClick={() => handleDelete(todo.id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n","import React from \"react\";\nimport { TodoListItem } from \"./TodoListItem\";\n\nexport const TodoList = ({ todos, handleToggle, handleDelete }) => {\n  return (\n    <ul className=\"list-group list-group-flush\">\n      {todos.map((todo, i) => (\n\n        <TodoListItem\n          key={todo.id}\n          todo={todo}\n          i={i}\n          handleDelete={handleDelete}\n          handleToggle={handleToggle}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React, { useEffect, useReducer } from 'react'\nimport { todoReducer } from './todoReducer';\nimport { TodoAdd } from './TodoAdd';\n\nimport './styles.css';\nimport { TodoList } from './TodoList';\n\nconst init = () => {\n  \n  return JSON.parse(localStorage.getItem( 'todos', )) || [];\n  \n}\n\nexport const TodoApp = () => {\n\n  const [ todos, dispatch ] = useReducer(todoReducer, [], init)\n\n  \n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify( todos ))\n  }, [todos])\n\n  const handleDelete = ( todoId) => {\n\n    const action = {\n      type: 'delete',\n      payload: todoId\n    }\n    dispatch( action )\n  }\n\n  const handleToggle = ( todoId ) => {\n    dispatch( {\n      type: 'toggle',\n      payload: todoId\n    })\n  }\n\n  const handleAddTodo = ( newTodo) => {\n    \n    dispatch( {\n      type: 'add',\n      payload: newTodo\n    })\n  }\n\n  return (\n    <div className='container'>\n      <h1>Todo App ( {todos.length } )</h1>\n      <hr />\n      \n      <div className='row'>\n        <div className='col-7'>\n\n          <TodoList\n            todos={todos}\n            handleDelete={handleDelete}\n            handleToggle={handleToggle}\n          />\n\n        </div>\n        <div className='col-5'>\n          <TodoAdd \n            handleAddTodo={handleAddTodo}\n          />\n        </div>\n\n\n      </div>\n\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/TodoApp';\n\n\n\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}